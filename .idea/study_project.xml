<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="StudySettings">
    <StudyTaskManager>
      <option name="VERSION" value="16" />
      <option name="myUserTests">
        <map />
      </option>
      <option name="course">
        <HyperskillCourse>
          <option name="authors">
            <list />
          </option>
          <option name="courseMode" value="Study" />
          <option name="customPresentableName" />
          <option name="description" value="Privacy is an important matter is the realm of the Internet. When sending a message, you want to be sure that no-one but the addressee with the key can read it. The entirety of the modern Web is encrypted - take https for example! Donâ€™t stay behind: hop on the encryption/decryption train and learn the essential basics while implementing this simple project.&lt;br/&gt;&lt;br/&gt;Learn more at &lt;a href=&quot;https://hyperskill.org&quot;&gt;https://hyperskill.org/projects/46&lt;/a&gt;" />
          <option name="environment" value="" />
          <option name="id" value="0" />
          <option name="index" value="-1" />
          <option name="language" value="JAVA 11" />
          <option name="languageCode" value="en" />
          <option name="name" value="Encryption-Decryption" />
          <option name="stages">
            <list>
              <HyperskillStage>
                <option name="id" value="245" />
                <option name="stepId" value="5387" />
                <option name="title" value="Encrypted!" />
              </HyperskillStage>
              <HyperskillStage>
                <option name="id" value="246" />
                <option name="stepId" value="5388" />
                <option name="title" value="Knowledge is key" />
              </HyperskillStage>
              <HyperskillStage>
                <option name="id" value="247" />
                <option name="stepId" value="5389" />
                <option name="title" value="Decrypted!" />
              </HyperskillStage>
              <HyperskillStage>
                <option name="id" value="248" />
                <option name="stepId" value="5390" />
                <option name="title" value="I command you" />
              </HyperskillStage>
              <HyperskillStage>
                <option name="id" value="249" />
                <option name="stepId" value="5391" />
                <option name="title" value="X-files" />
              </HyperskillStage>
              <HyperskillStage>
                <option name="id" value="250" />
                <option name="stepId" value="5392" />
                <option name="title" value="Choices, choices" />
              </HyperskillStage>
            </list>
          </option>
          <option name="taskToTopics">
            <map>
              <entry key="0">
                <value>
                  <list>
                    <HyperskillTopic>
                      <option name="id" value="259" />
                      <option name="theoryId" value="3805" />
                      <option name="title" value="IDE" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="15" />
                      <option name="theoryId" value="3500" />
                      <option name="title" value="Introduction to Java" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="147" />
                      <option name="theoryId" value="3522" />
                      <option name="title" value="Basic literals" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="148" />
                      <option name="theoryId" value="3521" />
                      <option name="title" value="The first program" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="193" />
                      <option name="theoryId" value="3749" />
                      <option name="title" value="Printing data" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="260" />
                      <option name="theoryId" value="3801" />
                      <option name="title" value="IntelliJ IDEA" />
                    </HyperskillTopic>
                  </list>
                </value>
              </entry>
              <entry key="1">
                <value>
                  <list>
                    <HyperskillTopic>
                      <option name="id" value="480" />
                      <option name="theoryId" value="6577" />
                      <option name="title" value="Command line overview" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="14" />
                      <option name="theoryId" value="3518" />
                      <option name="title" value="Types and variables" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="309" />
                      <option name="theoryId" value="5035" />
                      <option name="title" value="Primitive and reference types" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="4" />
                      <option name="theoryId" value="3511" />
                      <option name="title" value="Array" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="30" />
                      <option name="theoryId" value="3520" />
                      <option name="title" value="Comments" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="112" />
                      <option name="theoryId" value="3513" />
                      <option name="title" value="Naming variables" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="146" />
                      <option name="theoryId" value="3519" />
                      <option name="title" value="Arithmetic operations" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="191" />
                      <option name="theoryId" value="3739" />
                      <option name="title" value="Write, compile and run" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="149" />
                      <option name="theoryId" value="3499" />
                      <option name="title" value="JVM, JRE and JDK" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="192" />
                      <option name="theoryId" value="3746" />
                      <option name="title" value="Running programs on your computer" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="113" />
                      <option name="theoryId" value="3603" />
                      <option name="title" value="Scanning the input" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="27" />
                      <option name="theoryId" value="3565" />
                      <option name="title" value="Integer types and operations" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="87" />
                      <option name="theoryId" value="3516" />
                      <option name="title" value="Boolean and logical operations" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="88" />
                      <option name="theoryId" value="3512" />
                      <option name="title" value="Relational operators" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="307" />
                      <option name="theoryId" value="5008" />
                      <option name="title" value="Increment and decrement" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="31" />
                      <option name="theoryId" value="3514" />
                      <option name="title" value="Characters" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="9" />
                      <option name="theoryId" value="3523" />
                      <option name="title" value="String" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="25" />
                      <option name="theoryId" value="3503" />
                      <option name="title" value="Conditional statement" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="89" />
                      <option name="theoryId" value="3505" />
                      <option name="title" value="The for-loop" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="90" />
                      <option name="theoryId" value="3498" />
                      <option name="title" value="The while and do-while loops" />
                    </HyperskillTopic>
                  </list>
                </value>
              </entry>
              <entry key="2">
                <value>
                  <list>
                    <HyperskillTopic>
                      <option name="id" value="502" />
                      <option name="theoryId" value="6865" />
                      <option name="title" value="Units of information" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="362" />
                      <option name="theoryId" value="5544" />
                      <option name="title" value="Binary numbers" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="161" />
                      <option name="theoryId" value="3532" />
                      <option name="title" value="Sizes and ranges" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="32" />
                      <option name="theoryId" value="3510" />
                      <option name="title" value="Type casting" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="94" />
                      <option name="theoryId" value="3590" />
                      <option name="title" value="Defining methods" />
                    </HyperskillTopic>
                  </list>
                </value>
              </entry>
              <entry key="3">
                <value>
                  <list>
                    <HyperskillTopic>
                      <option name="id" value="1" />
                      <option name="theoryId" value="3489" />
                      <option name="title" value="The main method" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="99" />
                      <option name="theoryId" value="3594" />
                      <option name="title" value="Arrays as parameters" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="111" />
                      <option name="theoryId" value="3566" />
                      <option name="title" value="Command-line arguments" />
                    </HyperskillTopic>
                  </list>
                </value>
              </entry>
              <entry key="4">
                <value>
                  <list>
                    <HyperskillTopic>
                      <option name="id" value="117" />
                      <option name="theoryId" value="3614" />
                      <option name="title" value="Introduction to OOP" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="60" />
                      <option name="theoryId" value="3497" />
                      <option name="title" value="What is an exception" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="59" />
                      <option name="theoryId" value="3570" />
                      <option name="title" value="Hierarchy of exceptions" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="65" />
                      <option name="theoryId" value="3552" />
                      <option name="title" value="Exception handling" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="172" />
                      <option name="theoryId" value="3635" />
                      <option name="title" value="Files" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="173" />
                      <option name="theoryId" value="3636" />
                      <option name="title" value="Reading files" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="177" />
                      <option name="theoryId" value="3652" />
                      <option name="title" value="Writing files" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="163" />
                      <option name="theoryId" value="3536" />
                      <option name="title" value="Errors in programs" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="115" />
                      <option name="theoryId" value="3618" />
                      <option name="title" value="Defining classes" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="7" />
                      <option name="theoryId" value="3621" />
                      <option name="title" value="Package" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="17" />
                      <option name="theoryId" value="3535" />
                      <option name="title" value="Constructor" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="96" />
                      <option name="theoryId" value="4727" />
                      <option name="title" value="Objects" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="116" />
                      <option name="theoryId" value="3495" />
                      <option name="title" value="Instance methods" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="28" />
                      <option name="theoryId" value="3589" />
                      <option name="title" value="Access modifiers" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="24" />
                      <option name="theoryId" value="3599" />
                      <option name="title" value="Getters and setters" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="8" />
                      <option name="theoryId" value="3583" />
                      <option name="title" value="Inheritance" />
                    </HyperskillTopic>
                  </list>
                </value>
              </entry>
              <entry key="5">
                <value>
                  <list>
                    <HyperskillTopic>
                      <option name="id" value="157" />
                      <option name="theoryId" value="3611" />
                      <option name="title" value="The concept of patterns" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="326" />
                      <option name="theoryId" value="5155" />
                      <option name="title" value="Template method" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="159" />
                      <option name="theoryId" value="3556" />
                      <option name="title" value="Strategy" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="160" />
                      <option name="theoryId" value="3577" />
                      <option name="title" value="Encapsulating object creation" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="324" />
                      <option name="theoryId" value="5761" />
                      <option name="title" value="Factory method" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="571" />
                      <option name="theoryId" value="7427" />
                      <option name="title" value="Final variables" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="37" />
                      <option name="theoryId" value="3525" />
                      <option name="title" value="Overloading" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="38" />
                      <option name="theoryId" value="3534" />
                      <option name="title" value="Static members" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="120" />
                      <option name="theoryId" value="3538" />
                      <option name="title" value="Multiple constructors" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="127" />
                      <option name="theoryId" value="3588" />
                      <option name="title" value="The keyword super" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="5" />
                      <option name="theoryId" value="3572" />
                      <option name="title" value="Hiding and overriding" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="491" />
                      <option name="theoryId" value="6692" />
                      <option name="title" value="Protected modifier" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="128" />
                      <option name="theoryId" value="3585" />
                      <option name="title" value="Referencing subclass objects" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="2" />
                      <option name="theoryId" value="3587" />
                      <option name="title" value="Polymorphism" />
                    </HyperskillTopic>
                    <HyperskillTopic>
                      <option name="id" value="124" />
                      <option name="theoryId" value="3615" />
                      <option name="title" value="Interface" />
                    </HyperskillTopic>
                  </list>
                </value>
              </entry>
            </map>
          </option>
          <option name="updateDate" value="0" />
          <option name="hyperskillProject">
            <HyperskillProject>
              <option name="description" value="Privacy is an important matter is the realm of the Internet. When sending a message, you want to be sure that no-one but the addressee with the key can read it. The entirety of the modern Web is encrypted - take https for example! Donâ€™t stay behind: hop on the encryption/decryption train and learn the essential basics while implementing this simple project." />
              <option name="id" value="46" />
              <option name="ideFiles" value="https://stepik.org/media/attachments/lesson/209884/additional_files.json" />
              <option name="language" value="java" />
              <option name="templateBased" value="false" />
              <option name="title" value="Encryption-Decryption" />
              <option name="useIde" value="true" />
            </HyperskillProject>
          </option>
          <option name="items">
            <list>
              <FrameworkLesson>
                <option name="currentTaskIndex" value="3" />
                <option name="customPresentableName" />
                <option name="id" value="0" />
                <option name="index" value="1" />
                <option name="name" value="Encryption-Decryption" />
                <option name="updateDate" value="0" />
                <option name="unitId" value="0" />
                <option name="items">
                  <list>
                    <EduTask>
                      <option name="customPresentableName" value="stage1" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;h2 style=&quot;text-align: center;&quot;&gt;Motivation&lt;/h2&gt;&#10;&#10;&lt;p&gt;Today, encryption and decryption algorithms are used everywhere on the Internet to protect our data. This is especially important for sites that handle sensitive data, such as e-commerce sites that accept online card payments and login areas that require users to enter their credentials. To ensure data security, there are complex encryption algorithms behind the scenes.&lt;/p&gt;&#10;&#10;&lt;p&gt;In this project, you will learn how to encrypt and decrypt messages and texts using simple algorithms. We should note that such algorithms are not suitable for industrial use because they can easily be cracked, but these algorithms demonstrate some general ideas about encryption.&lt;/p&gt;&#10;&#10;&lt;h2 style=&quot;text-align: center;&quot;&gt;Description&lt;/h2&gt;&#10;&#10;&lt;p&gt;[ALERT-primary]For the first stage, you need to manually encrypt the message &lt;strong&gt;&quot;we found a treasure!&quot;&lt;/strong&gt; and print onlyÂ the ciphertext (in lower case).[/ALERT]&lt;/p&gt;&#10;&#10;&lt;p&gt;To encrypt the message, replace each letter with the letter that is in the corresponding position from the end of the English alphabet (aâ†’z, bâ†’y, câ†’x, ... xâ†’c, y â†’b, zâ†’a). Do not replace spaces or the exclamation mark.&lt;/p&gt;&#10;&#10;&lt;p&gt;Use the given template to your program to print the ciphertext instead of the original message.&lt;/p&gt;&#10;&#10;&lt;p&gt;The output should look like &lt;code&gt;## ##### # ########!&lt;/code&gt; where &lt;strong&gt;#&lt;/strong&gt; is a lower-case English letter.&lt;/p&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/projects/46/stages/245/implement" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="5387" />
                      <option name="index" value="1" />
                      <option name="name" value="Encrypted!" />
                      <option name="record" value="1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/encryptdecrypt/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="name" value="src/encryptdecrypt/Main.java" />
                                <option name="text" value="package encryptdecrypt;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        System.out.println(&quot;Hello World!&quot;);&#10;    }&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="test/EncryptDecryptTest.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="name" value="test/EncryptDecryptTest.java" />
                                <option name="text" value="import encryptdecrypt.Main;&#10;import org.hyperskill.hstest.v6.stage.BaseStageTest;&#10;import org.hyperskill.hstest.v6.testcase.CheckResult;&#10;import org.hyperskill.hstest.v6.testcase.PredefinedIOTestCase;&#10;import org.hyperskill.hstest.v6.testcase.TestCase;&#10;&#10;import java.util.List;&#10;&#10;public class EncryptDecryptTest extends BaseStageTest&lt;String&gt; {&#10;    public EncryptDecryptTest() {&#10;        super(Main.class);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;TestCase&lt;String&gt;&gt; generate() {&#10;        return List.of(&#10;            new TestCase&lt;String&gt;().setAttach(&quot;dv ulfmw z givzhfiv!&quot;)&#10;        );&#10;    }&#10;&#10;    @Override&#10;    public CheckResult check(String reply, String clue) {&#10;        reply = reply.trim();&#10;        clue = clue.trim();&#10;        boolean isCorrect = reply.trim().equals(clue.trim());&#10;        if (isCorrect) {&#10;            return CheckResult.TRUE;&#10;        }&#10;        if (reply.length() != clue.length()) {&#10;            return CheckResult.FALSE(&#10;                &quot;You should output a line with length &quot; +&#10;                clue.length() + &quot;. &quot; + &quot;You output a &quot; +&#10;                &quot;line with length &quot; + reply.length()&#10;            );&#10;        }&#10;        for (int i = 0; i &lt; clue.length(); i++) {&#10;            if (reply.charAt(i) != clue.charAt(i)) {&#10;                return CheckResult.FALSE(&#10;                    &quot;Your &quot; + (i+1) + &quot;-th character '&quot; + reply.charAt(i) + &quot;'&quot; +&#10;                    &quot; is incorrect. The right one is '&quot; + clue.charAt(i) + &quot;'&quot;&#10;                );&#10;            }&#10;        }&#10;        return CheckResult.TRUE;&#10;    }&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1570195934000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" value="stage2" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;h2 style=&quot;text-align: center;&quot;&gt;Description&lt;/h2&gt;&#10;&#10;&lt;p&gt;Write a program that reads an English message and an integer number (&lt;strong&gt;key&lt;/strong&gt;) from the standard input and shifts each letter by the specified number according to its order in the alphabet. If you reach the end of the alphabet, start back at the beginning (&lt;strong&gt;a&lt;/strong&gt; follows &lt;strong&gt;z&lt;/strong&gt;).&lt;/p&gt;&#10;&#10;&lt;p&gt;The English alphabet is below:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;abcdefghijklmnopqrstuvwxyz&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;The program should not modify non-letter characters.&lt;/p&gt;&#10;&#10;&lt;p&gt;The key is assumed to mean that if a person knows the value of the key, he or she will be able to decrypt the text, and if he or she does not know, he or she will not be able to decrypt the text.Â It's like a real key that can open up access to the message text.&lt;/p&gt;&#10;&#10;&lt;p&gt;[ALERT-primary]&lt;strong&gt;Note, &lt;/strong&gt;key is just a special parameter that controls the behavior of our encryption algorithm.Â See the picture below for more information.[/ALERT]&lt;/p&gt;&#10;&#10;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;354&quot; src=&quot;https://ucarecdn.com/60ec14dd-7cef-4895-b147-8115e83c533e/&quot; width=&quot;662&quot;&gt;&lt;/p&gt;&#10;&#10;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;The encryption process&lt;/strong&gt;&lt;/p&gt;&#10;&#10;&lt;h2&gt;Input example&lt;/h2&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;welcome to hyperskill&#10;5&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;h2&gt;Output example&lt;/h2&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;bjqhtrj yt mdujwxpnqq&lt;/code&gt;&lt;/pre&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/projects/46/stages/246/implement" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="5388" />
                      <option name="index" value="2" />
                      <option name="name" value="Knowledge is key" />
                      <option name="record" value="2" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="test/EncryptDecryptTest.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/EncryptDecryptTest.java" />
                                <option name="text" value="import encryptdecrypt.Main;&#10;import org.hyperskill.hstest.v6.stage.BaseStageTest;&#10;import org.hyperskill.hstest.v6.testcase.CheckResult;&#10;import org.hyperskill.hstest.v6.testcase.TestCase;&#10;&#10;import java.util.List;&#10;&#10;&#10;class Attach {&#10;    String original;&#10;    int shift;&#10;    String output;&#10;&#10;    public Attach(String original, int shift, String output) {&#10;        this.original = original;&#10;        this.shift = shift;&#10;        this.output = output;&#10;    }&#10;}&#10;&#10;public class EncryptDecryptTest extends BaseStageTest&lt;Attach&gt; {&#10;    public EncryptDecryptTest() {&#10;        super(Main.class);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;TestCase&lt;Attach&gt;&gt; generate() {&#10;        return List.of(&#10;            new TestCase&lt;Attach&gt;()&#10;                .setInput(&quot;welcome to hyperskill\n5&quot;)&#10;                .setAttach(new Attach(&#10;                    &quot;welcome to hyperskill&quot;,&#10;                    5,&#10;                    &quot;bjqhtrj yt mdujwxpnqq&quot;)),&#10;&#10;            new TestCase&lt;Attach&gt;()&#10;                .setInput(&quot;treasure\n10&quot;)&#10;                .setAttach(new Attach(&#10;                    &quot;treasure&quot;,&#10;                    10,&#10;                    &quot;dbokcebo&quot;&#10;                )),&#10;&#10;            new TestCase&lt;Attach&gt;()&#10;                .setInput(&quot;qdvdqvrxqwxrxwpvrxspvxiqgdiqarairpbiqqid\n12&quot;)&#10;                .setAttach(new Attach(&#10;                    &quot;qdvdqvrxqwxrxwpvrxspvxiqgdiqarairpbiqqid&quot;,&#10;                    12,&#10;                    &quot;cphpchdjcijdjibhdjebhjucspucmdmudbnuccup&quot;&#10;                )),&#10;&#10;            new TestCase&lt;Attach&gt;()&#10;                .setInput(&quot;y\n10&quot;)&#10;                .setAttach(new Attach(&#10;                    &quot;y&quot;,&#10;                    10,&#10;                    &quot;i&quot;&#10;                ))&#10;        );&#10;    }&#10;&#10;    @Override&#10;    public CheckResult check(String reply, Attach attach) {&#10;        String clue = attach.output;&#10;        reply = reply.trim();&#10;        clue = clue.trim();&#10;        boolean isCorrect = reply.equals(clue);&#10;        if (isCorrect) {&#10;            return CheckResult.TRUE;&#10;        }&#10;        if (reply.length() != clue.length()) {&#10;            return CheckResult.FALSE(&#10;                &quot;You should output a line with length &quot; +&#10;                    clue.length() + &quot;. &quot; + &quot;You output a &quot; +&#10;                    &quot;line with length &quot; + reply.length()&#10;            );&#10;        }&#10;        for (int i = 0; i &lt; clue.length(); i++) {&#10;            if (reply.charAt(i) != clue.charAt(i)) {&#10;                return CheckResult.FALSE(&#10;                    &quot;Your &quot; + (i+1) + &quot;-th character '&quot; + reply.charAt(i) + &quot;'&quot; +&#10;                        &quot; is incorrect. \n&quot; +&#10;                    &quot;The right one is '&quot; + clue.charAt(i) + &quot;'. \n&quot; +&#10;                        &quot;Key is &quot; + attach.shift&#10;                );&#10;            }&#10;        }&#10;        return CheckResult.TRUE;&#10;    }&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="src/encryptdecrypt/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/encryptdecrypt/Main.java" />
                                <option name="text" value="package encryptdecrypt;&#10;&#10;import java.util.stream.Collectors;&#10;import java.util.stream.IntStream;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        Encryptor encryptor = new Encryptor();&#10;        System.out.println(encryptor.encrypt(&quot;we found a treasure!&quot;));&#10;    }&#10;&#10;    static class Encryptor {&#10;        private static final String ALPHABET = IntStream.rangeClosed('a', 'z')&#10;                .mapToObj(Character::toString)&#10;                .collect(Collectors.joining());&#10;        private static final int ALPHABET_LENGTH = ALPHABET.length();&#10;&#10;        public String encrypt(String input) {&#10;            StringBuilder builder = new StringBuilder();&#10;            for (int i = 0; i &lt; input.length(); i++) {&#10;                int index = ALPHABET.indexOf(input.charAt(i));&#10;                if (index &gt;= 0) {&#10;                    builder.append(ALPHABET.charAt(ALPHABET_LENGTH - index - 1));&#10;                } else {&#10;                    builder.append(input.charAt(i));&#10;                }&#10;            }&#10;            return builder.toString();&#10;        }&#10;    }&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1570195936000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" value="stage3" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;h2 style=&quot;text-align: center;&quot;&gt;Description&lt;/h2&gt;&#10;&#10;&lt;p&gt;In this stage, you need to support decryption in your program. The decryption is simply the inverse of encryption, following the same steps but reversing the order in which the keys are applied.&lt;/p&gt;&#10;&#10;&lt;p&gt;Write a program that reads three lines from the standard input: a target operation (&lt;strong&gt;enc&lt;/strong&gt; - encryption, &lt;strong&gt;dec&lt;/strong&gt; - decryption), a message or a cyphertext, and a key to encrypt/decrypt messages. All non-letter characters must be encrypted as well as regular letters. We recommend you to get an integer representation of each character (according to the Unicode table) to shift it.&lt;/p&gt;&#10;&#10;&lt;p&gt;Decompose your program using methods to make it easy to understand and edit later. One method should encrypt a message and another one should decrypt it according to a key.&lt;/p&gt;&#10;&#10;&lt;h2 style=&quot;text-align: center;&quot;&gt;Encryption input example&lt;/h2&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;enc&#10;Welcome to hyperskill!&#10;5&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;h2 style=&quot;text-align: center;&quot;&gt;Encryption output example&lt;/h2&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;\jqhtrj%yt%m~ujwxpnqq&amp;amp;&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;h2 style=&quot;text-align: center;&quot;&gt;Decryption input example&lt;/h2&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;dec&#10;\jqhtrj%yt%m~ujwxpnqq&amp;amp;&#10;5&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;h2 style=&quot;text-align: center;&quot;&gt;Decryption output example&lt;/h2&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;Welcome to hyperskill!&lt;/code&gt;&lt;/pre&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/projects/46/stages/247/implement" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="5389" />
                      <option name="index" value="3" />
                      <option name="name" value="Decrypted!" />
                      <option name="record" value="3" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="test/EncryptDecryptTest.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="test/EncryptDecryptTest.java" />
                                <option name="text" value="import encryptdecrypt.Main;&#10;import org.hyperskill.hstest.v6.stage.BaseStageTest;&#10;import org.hyperskill.hstest.v6.testcase.PredefinedIOTestCase;&#10;&#10;import java.util.List;&#10;&#10;public class EncryptDecryptTest extends BaseStageTest {&#10;    public EncryptDecryptTest() throws Exception {&#10;        super(Main.class);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;PredefinedIOTestCase&gt; generate() {&#10;        return List.of(&#10;            new PredefinedIOTestCase(&#10;                &quot;enc\n&quot; +&#10;                    &quot;Welcome to hyperskill!\n&quot; +&#10;                    &quot;5&quot;,&#10;                &quot;\\jqhtrj%yt%m~ujwxpnqq&amp;&quot;),&#10;            new PredefinedIOTestCase(&#10;                &quot;enc\n&quot; +&#10;                    &quot;Hello\n&quot; +&#10;                    &quot;0&quot;,&#10;                &quot;Hello&quot;),&#10;            new PredefinedIOTestCase(&#10;                &quot;enc\n&quot; +&#10;                    &quot;012345678\n&quot; +&#10;                    &quot;1&quot;,&#10;                &quot;123456789&quot;),&#10;            new PredefinedIOTestCase(&#10;                &quot;dec\n&quot; +&#10;                    &quot;\\jqhtrj%yt%m~ujwxpnqq&amp;\n&quot; +&#10;                    &quot;5&quot;,&#10;                &quot;Welcome to hyperskill!&quot;),&#10;            new PredefinedIOTestCase(&#10;                &quot;dec\n&quot; +&#10;                    &quot;Hello\n&quot; +&#10;                    &quot;0&quot;,&#10;                &quot;Hello&quot;),&#10;            new PredefinedIOTestCase(&#10;                &quot;dec\n&quot; +&#10;                    &quot;222233334444\n&quot; +&#10;                    &quot;1&quot;,&#10;                &quot;111122223333&quot;)&#10;        );&#10;    }&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="src/encryptdecrypt/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/encryptdecrypt/Main.java" />
                                <option name="text" value="package encryptdecrypt;&#10;&#10;import java.util.stream.Collectors;&#10;import java.util.stream.IntStream;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        Encryptor encryptor = new Encryptor();&#10;        System.out.println(encryptor.encrypt(&quot;we found a treasure!&quot;));&#10;    }&#10;&#10;    static class Encryptor {&#10;        private static final String ALPHABET = IntStream.rangeClosed('a', 'z')&#10;                .mapToObj(Character::toString)&#10;                .collect(Collectors.joining());&#10;        private static final int ALPHABET_LENGTH = ALPHABET.length();&#10;&#10;        public String encrypt(String input) {&#10;            StringBuilder builder = new StringBuilder();&#10;            for (int i = 0; i &lt; input.length(); i++) {&#10;                int index = ALPHABET.indexOf(input.charAt(i));&#10;                if (index &gt;= 0) {&#10;                    builder.append(ALPHABET.charAt(ALPHABET_LENGTH - index - 1));&#10;                } else {&#10;                    builder.append(input.charAt(i));&#10;                }&#10;            }&#10;            return builder.toString();&#10;        }&#10;    }&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1570195937000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" value="stage4" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;h2 style=&quot;text-align: center;&quot;&gt;Description&lt;/h2&gt;&#10;&#10;&lt;p&gt;Modify the previous program to work with command-line arguments instead of the standard input. The program must parse three arguments: &lt;strong&gt;-mode&lt;/strong&gt;, &lt;strong&gt;-key&lt;/strong&gt; and &lt;strong&gt;-data&lt;/strong&gt;. The first argument should determine the programâ€™s mode (&lt;strong&gt;enc&lt;/strong&gt; - encryption, &lt;strong&gt;dec&lt;/strong&gt; - decryption). The second argument is an integer key to modify the message, and the third argument is a text or ciphertext within quotes to encrypt or decrypt.&lt;/p&gt;&#10;&#10;&lt;p&gt;All the arguments are guaranteed to be passed to the program.Â If for some reason it turns out to be wrong:&lt;/p&gt;&#10;&#10;&lt;ol&gt;&#10;    &lt;li&gt;If there is no &lt;strong&gt;-mode&lt;/strong&gt;, the program should work in &lt;strong&gt;enc&lt;/strong&gt;Â mode.&lt;/li&gt;&#10;    &lt;li&gt;If there is no &lt;strong&gt;-key&lt;/strong&gt;, the program should consider that &lt;strong&gt;key&lt;/strong&gt; = 0.&lt;/li&gt;&#10;    &lt;li&gt;If there is no &lt;strong&gt;-data&lt;/strong&gt;, the program should assume that the &lt;strong&gt;data &lt;/strong&gt;is an empty string.&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&#10;&lt;p&gt;[ALERT-primary]Keep in mind that arguments may be in different order. For example,&lt;strong&gt;Â -mode enc&lt;/strong&gt; may be at the end, at the beginning or in the middle of arguments array.[/ALERT]&lt;/p&gt;&#10;&#10;&lt;h2 style=&quot;text-align: center;&quot;&gt;Run configuration examples for encryption&lt;/h2&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;java Main -mode enc -key 5 -data &quot;Welcome to hyperskill!&quot;&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;h2 style=&quot;text-align: center;&quot;&gt;Encryption output example&lt;/h2&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;\jqhtrj%yt%m~ujwxpnqq&amp;amp;&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;h2 style=&quot;text-align: center;&quot;&gt;Run configuration examples for decryption&lt;/h2&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;java Main -key 5 -data &quot;\jqhtrj%yt%m~ujwxpnqq&amp;amp;&quot; -mode dec&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;h2 style=&quot;text-align: center;&quot;&gt;Decryption output example&lt;/h2&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;Welcome to hyperskill!&lt;/code&gt;&lt;/pre&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/projects/46/stages/248/implement" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="5390" />
                      <option name="index" value="4" />
                      <option name="name" value="I command you" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="test/EncryptDecryptTest.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="name" value="test/EncryptDecryptTest.java" />
                                <option name="text" value="import encryptdecrypt.Main;&#10;import org.hyperskill.hstest.v6.stage.BaseStageTest;&#10;import org.hyperskill.hstest.v6.testcase.CheckResult;&#10;import org.hyperskill.hstest.v6.testcase.TestCase;&#10;&#10;import java.util.List;&#10;&#10;public class EncryptDecryptTest extends BaseStageTest&lt;String&gt; {&#10;    public EncryptDecryptTest() throws Exception {&#10;        super(Main.class);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;TestCase&lt;String&gt;&gt; generate() {&#10;        return List.of(&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;enc&quot;,&#10;                    &quot;-key&quot;, &quot;5&quot;,&#10;                    &quot;-data&quot;, &quot;Welcome to hyperskill!&quot;&#10;                )&#10;                .setAttach(&quot;\\jqhtrj%yt%m~ujwxpnqq&amp;&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-key&quot;, &quot;0&quot;,&#10;                    &quot;-mode&quot;, &quot;enc&quot;,&#10;                    &quot;-data&quot;, &quot;Hello&quot;&#10;                )&#10;                .setAttach(&quot;Hello&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-key&quot;, &quot;1&quot;,&#10;                    &quot;-data&quot;, &quot;012345678&quot;,&#10;                    &quot;-mode&quot;, &quot;enc&quot;&#10;                )&#10;                .setAttach(&quot;123456789&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;dec&quot;,&#10;                    &quot;-data&quot;, &quot;\\jqhtrj%yt%m~ujwxpnqq&amp;&quot;,&#10;                    &quot;-key&quot;, &quot;5&quot;&#10;                )&#10;                .setAttach(&quot;Welcome to hyperskill!&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;dec&quot;,&#10;                    &quot;-key&quot;, &quot;0&quot;,&#10;                    &quot;-data&quot;, &quot;Hi&quot;&#10;                )&#10;                .setAttach(&quot;Hi&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;dec&quot;,&#10;                    &quot;-key&quot;, &quot;1&quot;,&#10;                    &quot;-data&quot;, &quot;222233334444&quot;&#10;                )&#10;                .setAttach(&quot;111122223333&quot;)&#10;        );&#10;    }&#10;&#10;    @Override&#10;    public CheckResult check(String reply, String clue) {&#10;        return new CheckResult(reply.trim().equals(clue.trim()));&#10;    }&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="src/encryptdecrypt/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/encryptdecrypt/Main.java" />
                                <option name="text" value="package encryptdecrypt;&#10;&#10;import java.util.stream.Collectors;&#10;import java.util.stream.IntStream;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        Encryptor encryptor = new Encryptor();&#10;        System.out.println(encryptor.encrypt(&quot;we found a treasure!&quot;));&#10;    }&#10;&#10;    static class Encryptor {&#10;        private static final String ALPHABET = IntStream.rangeClosed('a', 'z')&#10;                .mapToObj(Character::toString)&#10;                .collect(Collectors.joining());&#10;        private static final int ALPHABET_LENGTH = ALPHABET.length();&#10;&#10;        public String encrypt(String input) {&#10;            StringBuilder builder = new StringBuilder();&#10;            for (int i = 0; i &lt; input.length(); i++) {&#10;                int index = ALPHABET.indexOf(input.charAt(i));&#10;                if (index &gt;= 0) {&#10;                    builder.append(ALPHABET.charAt(ALPHABET_LENGTH - index - 1));&#10;                } else {&#10;                    builder.append(input.charAt(i));&#10;                }&#10;            }&#10;            return builder.toString();&#10;        }&#10;    }&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1570195939000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" value="stage5" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;h2 style=&quot;text-align: center;&quot;&gt;Description&lt;/h2&gt;&#10;&#10;&lt;p&gt;At this stage, you need to add the ability to read and write original and cipher data to files. The program must parse two additional arguments &lt;strong&gt;-in&lt;/strong&gt; and &lt;strong&gt;-out&lt;/strong&gt; to specify the full name of a file to read data and to write the result. Arguments &lt;strong&gt;-mode&lt;/strong&gt;, &lt;strong&gt;-key&lt;/strong&gt;, and &lt;strong&gt;-data&lt;/strong&gt; should still work as before.&lt;/p&gt;&#10;&#10;&lt;p&gt;Your program should read data from &lt;strong&gt;-data&lt;/strong&gt; or from a file written in the &lt;strong&gt;-in&lt;/strong&gt; argument. That's why you can't have both &lt;strong&gt;-data&lt;/strong&gt; and &lt;strong&gt;-in&lt;/strong&gt; arguments simultaneously, only one of them.&lt;/p&gt;&#10;&#10;&lt;ol&gt;&#10;    &lt;li&gt;If there is no &lt;strong&gt;-mode&lt;/strong&gt;, the program should work in &lt;strong&gt;enc&lt;/strong&gt;Â mode.&lt;/li&gt;&#10;    &lt;li&gt;If there is no &lt;strong&gt;-key&lt;/strong&gt;, the program should consider that &lt;strong&gt;key&lt;/strong&gt; = 0.&lt;/li&gt;&#10;    &lt;li&gt;If there is no &lt;strong&gt;-data&lt;/strong&gt;, and there is no &lt;strong&gt;-in&lt;/strong&gt;Â the program should assume that the data is an empty string.&lt;/li&gt;&#10;    &lt;li&gt;If there is no &lt;strong&gt;-out&lt;/strong&gt; argument, the program must print data to the standard output.&lt;/li&gt;&#10;    &lt;li&gt;If there are both &lt;strong&gt;-data&lt;/strong&gt; and &lt;strong&gt;-in&lt;/strong&gt; arguments, your program should prefer &lt;strong&gt;-data&lt;/strong&gt; over &lt;strong&gt;-in&lt;/strong&gt;.&lt;/li&gt;&#10;&lt;/ol&gt;&#10;&#10;&lt;p&gt;If there is a non-standard situation (an input file does not exist or an argument doesnâ€™t have a value), the program should not fail. Instead, it must display a clear message about the problem and stop successfully. The message should contain the word &quot;Error&quot; in any case.&lt;/p&gt;&#10;&#10;&lt;h2 style=&quot;text-align: center;&quot;&gt;Examples&lt;/h2&gt;&#10;&#10;&lt;p&gt;&lt;strong&gt;Example 1&lt;/strong&gt;&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;java Main -mode enc -in road_to_treasure.txt -out protected.txt -key 5&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;This command must get data from the fileÂ &lt;strong&gt;road_to_treasure.txt&lt;/strong&gt;, encrypt the data with theÂ key 5,Â create a file called &lt;strong&gt;protected.txt&lt;/strong&gt; and write ciphertext to it.&lt;/p&gt;&#10;&#10;&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;Input:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;java Main -mode enc -key 5 -data &quot;Welcome to hyperskill!&quot;&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;Output:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;\jqhtrj%yt%m~ujwxpnqq&amp;amp;&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;&lt;strong&gt;Example 3&lt;/strong&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;Input:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;java Main -key 5 -data &quot;\jqhtrj%yt%m~ujwxpnqq&amp;amp;&quot; -mode dec&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;Output:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;Welcome to hyperskill!&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;Â &lt;/p&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/projects/46/stages/249/implement" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="5391" />
                      <option name="index" value="5" />
                      <option name="name" value="X-files" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="files">
                        <map>
                          <entry key="test/EncryptDecryptTest.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="name" value="test/EncryptDecryptTest.java" />
                                <option name="text" value="import encryptdecrypt.Main;&#10;import org.hyperskill.hstest.v6.common.FileUtils;&#10;import org.hyperskill.hstest.v6.stage.BaseStageTest;&#10;import org.hyperskill.hstest.v6.testcase.CheckResult;&#10;import org.hyperskill.hstest.v6.testcase.TestCase;&#10;&#10;import java.util.List;&#10;&#10;public class EncryptDecryptTest extends BaseStageTest&lt;String&gt; {&#10;    public EncryptDecryptTest() {&#10;        super(Main.class);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;TestCase&lt;String&gt;&gt; generate() {&#10;        return List.of(&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;enc&quot;,&#10;                    &quot;-key&quot;, &quot;5&quot;,&#10;                    &quot;-in&quot;, &quot;in.txt&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;\\jqhtrj%yt%m~ujwxpnqq&amp;&quot;)&#10;                .addFile(&quot;in.txt&quot;, &quot;Welcome to hyperskill!&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-key&quot;, &quot;0&quot;,&#10;                    &quot;-mode&quot;, &quot;enc&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;Hello&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;Hello&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-key&quot;, &quot;1&quot;,&#10;                    &quot;-in&quot;, &quot;i.txt&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;,&#10;                    &quot;-mode&quot;, &quot;enc&quot;&#10;                )&#10;                .setAttach(&quot;123456789&quot;)&#10;                .addFile(&quot;i.txt&quot;, &quot;012345678&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;dec&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;,&#10;                    &quot;-key&quot;, &quot;5&quot;&#10;                )&#10;                .setAttach(&quot;Welcome to hyperskill!&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;\\jqhtrj%yt%m~ujwxpnqq&amp;&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;dec&quot;,&#10;                    &quot;-key&quot;, &quot;0&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;Hi&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;Hi&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;dec&quot;,&#10;                    &quot;-key&quot;, &quot;1&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;111122223333&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;222233334444&quot;)&#10;        );&#10;    }&#10;&#10;    @Override&#10;    public CheckResult check(String reply, String clue) {&#10;        String output = FileUtils.readFile(&quot;output.txt&quot;);&#10;        return new CheckResult(output.trim().equals(clue.trim()));&#10;    }&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="src/encryptdecrypt/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="name" value="src/encryptdecrypt/Main.java" />
                                <option name="text" value="package encryptdecrypt;&#10;&#10;import java.util.stream.Collectors;&#10;import java.util.stream.IntStream;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        Encryptor encryptor = new Encryptor();&#10;        System.out.println(encryptor.encrypt(&quot;we found a treasure!&quot;));&#10;    }&#10;&#10;    static class Encryptor {&#10;        private static final String ALPHABET = IntStream.rangeClosed('a', 'z')&#10;                .mapToObj(Character::toString)&#10;                .collect(Collectors.joining());&#10;        private static final int ALPHABET_LENGTH = ALPHABET.length();&#10;&#10;        public String encrypt(String input) {&#10;            StringBuilder builder = new StringBuilder();&#10;            for (int i = 0; i &lt; input.length(); i++) {&#10;                int index = ALPHABET.indexOf(input.charAt(i));&#10;                if (index &gt;= 0) {&#10;                    builder.append(ALPHABET.charAt(ALPHABET_LENGTH - index - 1));&#10;                } else {&#10;                    builder.append(input.charAt(i));&#10;                }&#10;            }&#10;            return builder.toString();&#10;        }&#10;    }&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1570195940000" />
                    </EduTask>
                    <EduTask>
                      <option name="customPresentableName" value="stage6" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;h2 style=&quot;text-align: center;&quot;&gt;Description&lt;/h2&gt;&#10;&#10;&lt;p&gt;Extend your program by adding different algorithmsÂ to encode/decode data. The first one would be shifting algorithm (it shifts each letter by the specified number according to its order in the alphabet in circle). The second one would be based on Unicode table, like in the previous stage.&lt;/p&gt;&#10;&#10;&lt;p&gt;When starting the program, the necessary algorithm should be specified by an argument (&lt;strong&gt;-alg&lt;/strong&gt;). The first algorithm should be named &lt;strong&gt;shift&lt;/strong&gt;, theÂ second one should be named &lt;strong&gt;unicode&lt;/strong&gt;. If there is no &lt;strong&gt;-alg&lt;/strong&gt; you should default it to &lt;strong&gt;shift&lt;/strong&gt;.&lt;/p&gt;&#10;&#10;&lt;p&gt;Remember that in case of &lt;strong&gt;shift&lt;/strong&gt; algorithm you need to encode only English letters (from 'a' to 'z' as the first circle and from 'A' to 'Z' as the second circle i.e. after 'z' comes 'a' and after 'Z&quot; comes 'A').&lt;/p&gt;&#10;&#10;&lt;p&gt;To complete this stage, we recommend that you create a set of classes and interfaces forÂ encryption and decryption algorithms.&lt;/p&gt;&#10;&#10;&lt;h2 style=&quot;text-align: center;&quot;&gt;Examples&lt;/h2&gt;&#10;&#10;&lt;p&gt;&lt;strong&gt;Example 1&lt;/strong&gt;&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;java Main -mode enc -in road_to_treasure.txt -out protected.txt -key 5 -alg unicode&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;This command must get data from the fileÂ &lt;strong&gt;road_to_treasure.txt&lt;/strong&gt;, encrypt the data with theÂ key 5,Â create a file called &lt;strong&gt;protected.txt&lt;/strong&gt; and write ciphertext to it.&lt;/p&gt;&#10;&#10;&lt;p&gt;&lt;strong&gt;Example 2&lt;/strong&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;Input:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;java Main -mode enc -key 5 -data &quot;Welcome to hyperskill!&quot; -alg unicode&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;Output:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;\jqhtrj%yt%m~ujwxpnqq&amp;amp;&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;&lt;strong&gt;Example 3&lt;/strong&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;Input:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;java Main -key 5 -alg unicode -data &quot;\jqhtrj%yt%m~ujwxpnqq&amp;amp;&quot; -mode dec&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;Output:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code&gt;Welcome to hyperskill!&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;&lt;strong&gt;Example 4:&lt;/strong&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;Input:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;java Main -key 5 -alg shift -data &quot;Welcome to hyperskill!&quot; -mode enc&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;Output:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;Bjqhtrj yt mdujwxpnqq!&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;&lt;strong&gt;Example 5:&lt;/strong&gt;&lt;/p&gt;&#10;&#10;&lt;p&gt;Input:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;java Main -key 5 -alg shift -data &quot;Bjqhtrj yt mdujwxpnqq!&quot; -mode dec&lt;/code&gt;&lt;/pre&gt;&#10;&#10;&lt;p&gt;Output:&lt;/p&gt;&#10;&#10;&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;Welcome to hyperskill!&lt;/code&gt;&lt;/pre&gt;&#10;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/projects/46/stages/250/implement" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="5392" />
                      <option name="index" value="6" />
                      <option name="name" value="Choices, choices" />
                      <option name="record" value="-1" />
                      <option name="status" value="Unchecked" />
                      <option name="files">
                        <map>
                          <entry key="test/EncryptDecryptTest.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="name" value="test/EncryptDecryptTest.java" />
                                <option name="text" value="import encryptdecrypt.Main;&#10;import org.hyperskill.hstest.v6.common.FileUtils;&#10;import org.hyperskill.hstest.v6.stage.BaseStageTest;&#10;import org.hyperskill.hstest.v6.testcase.CheckResult;&#10;import org.hyperskill.hstest.v6.testcase.TestCase;&#10;&#10;import java.util.List;&#10;&#10;public class EncryptDecryptTest extends BaseStageTest&lt;String&gt; {&#10;    public EncryptDecryptTest() {&#10;        super(Main.class);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;TestCase&lt;String&gt;&gt; generate() {&#10;        return List.of(&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-alg&quot;, &quot;unicode&quot;,&#10;                    &quot;-mode&quot;, &quot;enc&quot;,&#10;                    &quot;-key&quot;, &quot;5&quot;,&#10;                    &quot;-in&quot;, &quot;in.txt&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;\\jqhtrj%yt%m~ujwxpnqq&amp;&quot;)&#10;                .addFile(&quot;in.txt&quot;, &quot;Welcome to hyperskill!&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-key&quot;, &quot;0&quot;,&#10;                    &quot;-mode&quot;, &quot;enc&quot;,&#10;                    &quot;-alg&quot;, &quot;unicode&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;Hello&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;Hello&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-key&quot;, &quot;1&quot;,&#10;                    &quot;-in&quot;, &quot;i.txt&quot;,&#10;                    &quot;-alg&quot;, &quot;unicode&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;,&#10;                    &quot;-mode&quot;, &quot;enc&quot;&#10;                )&#10;                .setAttach(&quot;123456789&quot;)&#10;                .addFile(&quot;i.txt&quot;, &quot;012345678&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;dec&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;,&#10;                    &quot;-alg&quot;, &quot;unicode&quot;,&#10;                    &quot;-key&quot;, &quot;5&quot;&#10;                )&#10;                .setAttach(&quot;Welcome to hyperskill!&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;\\jqhtrj%yt%m~ujwxpnqq&amp;&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;dec&quot;,&#10;                    &quot;-alg&quot;, &quot;unicode&quot;,&#10;                    &quot;-key&quot;, &quot;0&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;Hi&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;Hi&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;dec&quot;,&#10;                    &quot;-key&quot;, &quot;1&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-alg&quot;, &quot;unicode&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;111122223333&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;222233334444&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;enc&quot;,&#10;                    &quot;-key&quot;, &quot;5&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-alg&quot;, &quot;shift&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;bjqhtrj yt mdujwxpnqq&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;welcome to hyperskill&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;dec&quot;,&#10;                    &quot;-key&quot;, &quot;10&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-alg&quot;, &quot;shift&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;treasure&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;dbokcebo&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;enc&quot;,&#10;                    &quot;-key&quot;, &quot;12&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-alg&quot;, &quot;shift&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;cphpchdjcijdjibhdjebhjucspucmdmudbnuccup&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;qdvdqvrxqwxrxwpvrxspvxiqgdiqarairpbiqqid&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;dec&quot;,&#10;                    &quot;-key&quot;, &quot;10&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-alg&quot;, &quot;shift&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;y&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;i&quot;),&#10;&#10;            new TestCase&lt;String&gt;()&#10;                .addArguments(&#10;                    &quot;-mode&quot;, &quot;enc&quot;,&#10;                    &quot;-key&quot;, &quot;10&quot;,&#10;                    &quot;-in&quot;, &quot;input.txt&quot;,&#10;                    &quot;-alg&quot;, &quot;shift&quot;,&#10;                    &quot;-out&quot;, &quot;output.txt&quot;&#10;                )&#10;                .setAttach(&quot;i&quot;)&#10;                .addFile(&quot;input.txt&quot;, &quot;y&quot;)&#10;        );&#10;    }&#10;&#10;    @Override&#10;    public CheckResult check(String reply, String clue) {&#10;        String output = FileUtils.readFile(&quot;output.txt&quot;);&#10;        return new CheckResult(output.trim().equals(clue.trim()));&#10;    }&#10;&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="false" />
                              </TaskFile>
                            </value>
                          </entry>
                          <entry key="src/encryptdecrypt/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="false" />
                                <option name="name" value="src/encryptdecrypt/Main.java" />
                                <option name="text" value="package encryptdecrypt;&#10;&#10;import java.util.stream.Collectors;&#10;import java.util.stream.IntStream;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        Encryptor encryptor = new Encryptor();&#10;        System.out.println(encryptor.encrypt(&quot;we found a treasure!&quot;));&#10;    }&#10;&#10;    static class Encryptor {&#10;        private static final String ALPHABET = IntStream.rangeClosed('a', 'z')&#10;                .mapToObj(Character::toString)&#10;                .collect(Collectors.joining());&#10;        private static final int ALPHABET_LENGTH = ALPHABET.length();&#10;&#10;        public String encrypt(String input) {&#10;            StringBuilder builder = new StringBuilder();&#10;            for (int i = 0; i &lt; input.length(); i++) {&#10;                int index = ALPHABET.indexOf(input.charAt(i));&#10;                if (index &gt;= 0) {&#10;                    builder.append(ALPHABET.charAt(ALPHABET_LENGTH - index - 1));&#10;                } else {&#10;                    builder.append(input.charAt(i));&#10;                }&#10;            }&#10;            return builder.toString();&#10;        }&#10;    }&#10;}&#10;" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1570195941000" />
                    </EduTask>
                  </list>
                </option>
              </FrameworkLesson>
              <Lesson>
                <option name="customPresentableName" value="Problems" />
                <option name="id" value="0" />
                <option name="index" value="2" />
                <option name="name" value="Problems" />
                <option name="updateDate" value="0" />
                <option name="unitId" value="0" />
                <option name="items">
                  <list>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Interval&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2165&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;Write a program that reads three integer numbers and prints &lt;strong&gt;true&lt;/strong&gt; if exactly one number is positive (i.e. &amp;gt; 0).&lt;/p&gt; &#10;  &lt;p&gt;Otherwise, it should print&lt;strong&gt; false&lt;/strong&gt;.&lt;/p&gt; &#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;1 1 1&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;false&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;1 0 -1&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;true&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3512&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2165" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2165" />
                      <option name="index" value="1" />
                      <option name="name" value="Interval" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="import java.util.Scanner;&#10;&#10;class Main {&#10;    public static void main(String[] args) {&#10;        Scanner scanner = new Scanner(System.in);&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1555067501000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Exactly one parameter is positive&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2274&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;Write a program that reads three integer numbers and prints &lt;strong&gt;true&lt;/strong&gt; if exactly one number is positive (i.e. &amp;gt; 0).&lt;/p&gt; &#10;  &lt;p&gt;Otherwise, it should print&lt;strong&gt; false&lt;/strong&gt;.&lt;/p&gt; &#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;1 1 1&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;false&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;1 0 -1&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;true&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3512&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2274" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2274" />
                      <option name="index" value="2" />
                      <option name="name" value="Exactly one parameter is positive" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="import java.util.Scanner;&#10;&#10;class Main {&#10;    public static void main(String[] args) {&#10;        Scanner scanner = new Scanner(System.in);&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1555067501000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;The roots of an equation&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2190&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;&lt;strong&gt;The roots of a cubic&amp;nbsp;equation&lt;/strong&gt;&lt;/p&gt; &#10;  &lt;p&gt;Given the numbers &lt;span class=&quot;math-tex&quot;&gt;\( a, b, c, d \)&lt;/span&gt;. Output in ascending order all the integers between 0 and 1000 which are the roots of the equation &lt;span class=&quot;math-tex&quot;&gt;\( ax^3+bx^2+cx+d=0 \)&lt;/span&gt;.&lt;/p&gt; &#10;  &lt;p&gt;If the specified interval does not contain the roots of the equation, do not output anything.&lt;/p&gt; &#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;-1&lt;br&gt;1&lt;br&gt;-1&lt;br&gt;1&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;1&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;0&lt;br&gt;1&lt;br&gt;-6&lt;br&gt;5&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;1&lt;br&gt;5&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;1&lt;br&gt;1&lt;br&gt;1&lt;br&gt;1&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3505&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2190" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2190" />
                      <option name="index" value="3" />
                      <option name="name" value="The roots of an equation" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;    public static void main(String[] args) {&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1557569270000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Maximum element divisible by 4&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2189&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt; Given a sequence of natural numbers, not exceeding 30000. Find the maximum element divisible by 4. The program receives the number of elements in the sequence and then the elements themselves as input. In the sequence, there is always an element divisible by 4. The number of elements does not exceed 1000. The program should print a single number: the maximum element of the sequence divisible by 4.&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;12&lt;br&gt;16&lt;br&gt;87&lt;br&gt;58&lt;br&gt;25&lt;br&gt;73&lt;br&gt;86&lt;br&gt;36&lt;br&gt;79&lt;br&gt;40&lt;br&gt;12&lt;br&gt;89&lt;br&gt;32&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;40&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3505&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2189" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2189" />
                      <option name="index" value="4" />
                      <option name="name" value="Maximum element divisible by 4" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;    public static void main(String[] args) {&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1541088443000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Lucky number&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/3797&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;[ALERT-warning]Typical task for a job interview.[/ALERT]&lt;/p&gt; &#10;  &lt;p&gt;Given the number N with an even number of digits. If the sum of the first half of the digits equals the sum of the second half of the digits, then this number is considered lucky. For a given number, output &quot;YES&quot; if this number is lucky, otherwise output &quot;NO&quot;.&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;12344321&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;YES&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;125322&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;NO&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3505&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/3797" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="3797" />
                      <option name="index" value="5" />
                      <option name="name" value="Lucky number" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="import java.util.*;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        // write your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1570620512000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;The length of the sequence&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2225&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;&lt;span&gt;For its input, the program gets a sequence of non-negative integers; each integer is written in a separate line. &lt;/span&gt;&lt;span&gt;The sequence ends with an integer 0; when the program reads 0, it should end its work and output the length of the sequence (not counting the final 0).&lt;/span&gt;&lt;/p&gt; &#10;  &lt;p&gt;Donâ€™t read numbers following the number 0.&lt;/p&gt; &#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;1&lt;br&gt;7&lt;br&gt;9&lt;br&gt;0&lt;br&gt;5&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;3&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 1s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3498&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2225" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2225" />
                      <option name="index" value="6" />
                      <option name="name" value="The length of the sequence" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;    public static void main(String[] args) {&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1541088430000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Squares of natural numbers&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2228&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;&lt;span&gt;Given integer N. Print all the squares of natural numbers, not exceeding N, in ascending order.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;50&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;1&lt;br&gt;4&lt;br&gt;9&lt;br&gt;16&lt;br&gt;25&lt;br&gt;36&lt;br&gt;49&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 1s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3498&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2228" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2228" />
                      <option name="index" value="7" />
                      <option name="name" value="Squares of natural numbers" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;    public static void main(String[] args) {&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1541088430000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;The smallest value&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2229&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;&lt;span&gt;A user inputs a long number &lt;/span&gt;&lt;i&gt;&lt;b&gt;M&lt;/b&gt;&lt;/i&gt;&lt;span&gt;. You need to find out what is the smallest long number &lt;/span&gt;&lt;b&gt;&lt;i&gt;n&lt;/i&gt;&lt;/b&gt;&lt;span&gt; such that &lt;/span&gt;&lt;b&gt;&lt;i&gt;n&lt;/i&gt;&lt;/b&gt;&lt;span&gt;! &amp;gt; &lt;/span&gt;&lt;b&gt;&lt;i&gt;M&lt;/i&gt;&lt;/b&gt;&lt;span&gt;.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&#10;  &lt;p&gt;Just in case: &lt;a href=&quot;https://en.wikipedia.org/wiki/Factorial&quot; rel=&quot;nofollow noopener noreferrer&quot; title=&quot;Link: https://en.wikipedia.org/wiki/Factorial&quot;&gt;wiki on factorials&lt;/a&gt;.&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;6188989133&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;13&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3498&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2229" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2229" />
                      <option name="index" value="8" />
                      <option name="name" value="The smallest value" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;    public static void main(String[] args) {&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1541088430000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Even or odd&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2153&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;Given a sequence of natural numbers. For each number of the sequence output &quot;even&quot; if the number is even, otherwise, &lt;span&gt;&quot;odd&quot;. If the number is equal to 0, the program must stop reading and processing numbers.&lt;/span&gt;&lt;/p&gt; &#10;  &lt;p&gt;&lt;b&gt;Input data&lt;/b&gt;&lt;/p&gt;&#10;  &lt;p&gt;A sequence of natural numbers, each number in a new line.&lt;/p&gt;&#10;  &lt;p&gt;&lt;b&gt;Output data&lt;/b&gt;&lt;/p&gt;&#10;  &lt;p&gt;The sequence of words &quot;even&quot; and &quot;odd&quot;. Each word in a new line.&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;1&lt;br&gt;2&lt;br&gt;3&lt;br&gt;4&lt;br&gt;0&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;odd&lt;br&gt;even&lt;br&gt;odd&lt;br&gt;even&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3507&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2153" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2153" />
                      <option name="index" value="9" />
                      <option name="name" value="Even or odd" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;    public static void main(String[] args) {&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1541088422000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Bus tour&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/3820&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;[ALERT-warning]Typical task for a job interview.[/ALERT]&lt;/p&gt; &#10;  &lt;p&gt;A bus tour of Europe has been very successful. Due to an increase in the number of people that want to go on a tour, the tour company decided to increase the height of the bus. The new height of the bus is exactly N centimeters.&lt;/p&gt; &#10;  &lt;p&gt;But the tourâ€™s route runs under a lot of bridges, and there is a chance that the bus will crash into one of these bridges. Can you find out if this will happen?&lt;/p&gt; &#10;  &lt;p&gt;The first line of the input contains the height of the bus and number of bridges under which the bus passes. The second line contains heights of these bridges.&lt;/p&gt; &#10;  &lt;p&gt;You should output &quot;Will not crash&quot; if everything will be all right; otherwise, output &quot;Will crash on bridge i&quot; (where i is a number of a bridge) into which the bus will crash. If the height of a bridge equals the height of the bus, the bus will crash.&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;234 8&lt;br&gt;465 453 981 463 1235 871 475 981&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;Will not crash&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;211 5&lt;br&gt;871 205 123 871 1681&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;Will crash on bridge 2&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3507&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/3820" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="3820" />
                      <option name="index" value="10" />
                      <option name="name" value="Bus tour" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="import java.util.*;&#10;&#10;public class Main {&#10;    public static void main(String[] args) {&#10;        // write your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1570620558000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;The (un)-ordered sequence&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2734&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;[ALERT-warning]Typical task for a job interview.[/ALERT]&lt;/p&gt; &#10;  &lt;p&gt;Write a program that reads a sequence of integer numbers and outputs &lt;strong&gt;true&lt;/strong&gt; if the sequence is ordered (in ascending or descending order), otherwise, &lt;strong&gt;false&lt;/strong&gt;. Keep in mind, if a number has the same value as the following number, it does not break the order.&lt;/p&gt; &#10;  &lt;p&gt;&amp;nbsp;&lt;/p&gt; &#10;  &lt;p&gt;The sequence ends with 0. Do not consider this number as a part of the sequence. The sequence always has at least one number (excluding 0).&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;9 8 7 6 5 4 3 2 1 0&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;true&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;1 2 3 3 9 0&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;true&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;1 2 5 5 2 3 0&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;false&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3507&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2734" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2734" />
                      <option name="index" value="11" />
                      <option name="name" value="The (un)-ordered sequence" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;    public static void main(String[] args) {&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1570620232000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Alphabetical order&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2285&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;div&gt;&#10;   &lt;span&gt;Write a program that reads a string and output &quot;true&quot; only when the&lt;/span&gt;&#10;   &lt;span&gt; letters of the String are in alphabetical order, otherwise, &quot;false&quot;. &lt;/span&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;span&gt;&lt;br&gt;&lt;/span&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;span&gt;Assume the empty string is in alphabetical order.&lt;/span&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;span&gt;&lt;br&gt;&lt;/span&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;span&gt;Note, string can contain only a single character.&lt;/span&gt;&#10;  &lt;/div&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;abc&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;true&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3551&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2285" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2285" />
                      <option name="index" value="12" />
                      <option name="name" value="Alphabetical order" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;    public static void main(String[] args) {&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1541088441000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Count the number of times two chars occur in a string&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2289&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;div&gt;&#10;   Write a program that counts the number of times that the two characters occur consecutively in a string. The order of characters should be the same as in the input.&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;br&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   Note, in the string &#10;   &lt;b&gt;&quot;bbb&quot;&lt;/b&gt; , the sequence &#10;   &lt;b&gt;&quot;bb&quot;&lt;/b&gt; occurs two times.&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;br&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;b&gt;Input data format&lt;/b&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   The single input line contains a string and two characters.&#10;  &lt;/div&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;abcd b c&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;1&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;cbbb b b&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;2&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3551&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2289" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2289" />
                      <option name="index" value="13" />
                      <option name="name" value="Count the number of times two chars occur in a string" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;    public static void main(String[] args) {&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1541088438000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Parse url&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/3660&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;You want to hack a website and get all available parameters. Print them &quot;&lt;b&gt;key : value&lt;/b&gt;&quot;. If you find the password (parameter &lt;b&gt;pass&lt;/b&gt;), you should print it after all parameters like in the sample. If a parameter doesn't have value print &quot;&lt;b&gt;not found&lt;/b&gt;&quot;.&lt;/p&gt;&#10;  &lt;p&gt;&lt;b&gt;Note&lt;/b&gt;: the order of parameters should like as in the url. If a url does not contain parameter &lt;b&gt;pass&lt;/b&gt;, do not print anything after parameters&lt;/p&gt;&#10;  &lt;p&gt;&lt;b&gt;Advice&lt;/b&gt;: learn the structure of URL. &amp;nbsp;&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;https://target.com/index.html?pass=12345&amp;port=8080&amp;cookie=&amp;host=localhost&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;pass : 12345&lt;br&gt;port : 8080&lt;br&gt;cookie : not found&lt;br&gt;host : localhost&lt;br&gt;password : 12345&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3551&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/3660" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="3660" />
                      <option name="index" value="14" />
                      <option name="name" value="Parse url" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;    public static void main(String[] args) {&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" value="1541088493000" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;The largest element of a sequence&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2230&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;&lt;span&gt;Given the sequence of integer numbers (which ends with the number 0). Find the largest element of the sequence.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&#10;  &lt;p&gt;The number 0 itself is not included in the sequence but serves only as a sign of the sequenceâ€™s end.&lt;/p&gt; &#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;1&lt;br&gt;7&lt;br&gt;9&lt;br&gt;0&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;9&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 1s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3498&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2230" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2230" />
                      <option name="index" value="15" />
                      <option name="name" value="The largest element of a sequence" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;    public static void main(String[] args) {&#10;        // put your code here&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Fixing the main method&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/4336&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;   Given a program that should print &#10;  &lt;b&gt;&quot;Hello, Java!&quot;&lt;/b&gt; but now it's not compiled. Fix the program. &#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3489&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/4336" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="4336" />
                      <option name="index" value="16" />
                      <option name="name" value="Fixing the main method" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;&#10;    public static void ma1n(String[] args) {&#10;        System.out.println(&quot;Hello, Java!&quot;);&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" value="Fixing the main method" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Fixing the main method&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2507&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;&lt;span&gt;Given a program that should print &lt;/span&gt;&lt;b&gt;&quot;Hello, Java!&quot;&lt;/b&gt;&lt;span&gt; but now it's not compiled. Fix the program.&lt;/span&gt;&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3489&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2507" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2507" />
                      <option name="index" value="17" />
                      <option name="name" value="Fixing the main method (1)" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Main {&#10;&#10;    public static int main(String[] args) {&#10;        System.out.println(&quot;Hello, Java!&quot;);&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Adding values&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2759&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;Write a method named &lt;code class=&quot;java&quot;&gt;addValueByIndex&lt;/code&gt;.&lt;br&gt;&lt;/p&gt;&#10;  &lt;p&gt;The method should take an array of longs and adds a value to the specified element by its index.&lt;/p&gt;&#10;  &lt;p&gt;Here are description of the parameters:&lt;br&gt;&lt;/p&gt;&#10;  &lt;ol&gt;&#10;   &lt;li&gt;an array of longs;&lt;/li&gt;&#10;   &lt;li&gt;the index of an element (&lt;code class=&quot;java&quot;&gt;int&lt;/code&gt;);&lt;br&gt;&lt;/li&gt;&#10;   &lt;li&gt;a value for adding (&lt;code class=&quot;java&quot;&gt;long&lt;/code&gt;).&lt;br&gt;&lt;/li&gt;&#10;  &lt;/ol&gt;&#10;  &lt;p&gt;The method must return nothing.&lt;/p&gt;&#10;  &lt;p&gt;The following invocation should work correctly:&lt;/p&gt;&#10;  &lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;addValueByIndex(array, index, value);&lt;/code&gt;&lt;/pre&gt;&#10;  &lt;p&gt;Where &lt;code class=&quot;java&quot;&gt;array&lt;/code&gt; is an array of longs, &lt;code class=&quot;java&quot;&gt;index&lt;/code&gt; is an integer variable, &lt;code class=&quot;java&quot;&gt;value&lt;/code&gt; is a long value for adding.&lt;br&gt;&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;1 1 1 1 1&lt;br&gt;2 100&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;1 1 101 1 1&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3594&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2759" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2759" />
                      <option name="index" value="18" />
                      <option name="name" value="Adding values" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="import java.util.*;&#10;&#10;public class Main {&#10;&#10;    // write a method here&#10;&#10;    public static void main(String args[]) {&#10;        Scanner scanner = new Scanner(System.in);&#10;        long[] array = Arrays.stream(scanner.nextLine().split(&quot; &quot;))&#10;                .mapToLong(Long::parseLong)&#10;                .toArray();&#10;        int index = scanner.nextInt();&#10;        long value = scanner.nextLong();&#10;        addValueByIndex(array, index, value);&#10;        Arrays.stream(array).forEach(e -&gt; System.out.print(e + &quot; &quot;));&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Inverse boolean flags&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2744&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  Write a body and a parameter of the method &#10;  &lt;code class=&quot;java&quot;&gt;inverseFlags&lt;/code&gt;. &#10;  &lt;span&gt;The method must take an array of booleans and negates each of them. Do not make a copy of the parameter, change elements of a passed array.&lt;/span&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;true false true&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;false true false&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3594&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2744" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2744" />
                      <option name="index" value="19" />
                      <option name="name" value="Inverse boolean flags" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="import java.util.*;&#10;import java.util.stream.Collectors;&#10;&#10;public class Main {&#10;&#10;    public static void inverseFlags(/* write a parameter here */) {&#10;        // write your code here&#10;    }&#10;&#10;    /* Do not change code below */&#10;    public static void main(String args[]) {&#10;        final Scanner scanner = new Scanner(System.in);&#10;        final List&lt;Boolean&gt; booleans = Arrays&#10;                .stream(scanner.nextLine().split(&quot;\\s+&quot;))&#10;                .map(Boolean::parseBoolean)&#10;                .collect(Collectors.toList());&#10;        final boolean[] flags = new boolean[booleans.size()];&#10;        for (int i = 0; i &lt; flags.length; i++) {&#10;            flags[i] = booleans.get(i);&#10;        }&#10;        inverseFlags(flags);&#10;        final String representation = Arrays.toString(flags)&#10;                .replace(&quot;[&quot;, &quot;&quot;)&#10;                .replace(&quot;]&quot;, &quot;&quot;)&#10;                .replace(&quot;,&quot;, &quot;&quot;);&#10;        System.out.println(representation);&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Sorting numbers&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/2245&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  Implement a method for sorting a given array of integers in the ascending order. &#10;  &lt;p&gt;You can use any algorithm for sorting it.&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;3 1 2&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;1 2 3 &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3594&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/2245" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="2245" />
                      <option name="index" value="20" />
                      <option name="name" value="Sorting numbers" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="import java.util.Arrays;&#10;import java.util.Scanner;&#10;&#10;public class Main {&#10;&#10;    public static void sort(int[] numbers) {&#10;        // write your code here&#10;    }&#10;&#10;    /* Do not change code below */&#10;    public static void main(String[] args) {&#10;        final Scanner scanner = new Scanner(System.in);&#10;        String[] values = scanner.nextLine().split(&quot;\\s+&quot;);&#10;        int[] numbers = Arrays.stream(values)&#10;                .mapToInt(Integer::parseInt)&#10;                .toArray();&#10;        sort(numbers);&#10;        Arrays.stream(numbers).forEach(e -&gt; System.out.print(e + &quot; &quot;));&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Calculator - 1&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/3333&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  Write a program that takes an operator (&quot;+&quot;, &quot;-&quot;, &quot;*&quot;) and two values as the command-line arguments and then outputs the result of the operator in the standard output. &#10;  &lt;span&gt;If the passed operator is not from the list, it must output the string &lt;/span&gt;&#10;  &lt;b&gt;&quot;Unknown operator&quot;&lt;/b&gt;&#10;  &lt;span&gt; without quotes.&lt;/span&gt;&#10;  &lt;div&gt;&#10;   &lt;span&gt;&lt;br&gt;&lt;/span&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;span&gt;Please, do not rename the provided class &lt;code class=&quot;java&quot;&gt;Problem&lt;/code&gt;.&lt;br&gt;&lt;/span&gt;&#10;  &lt;/div&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;+ 10 20&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;30&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;^ 2 10&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;Unknown operator&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3566&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/3333" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="3333" />
                      <option name="index" value="21" />
                      <option name="name" value="Calculator - 1" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Problem {&#10;&#10;    public static void main(String args[]) {&#10;&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Parameters and their values&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/3336&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  Write a program that takes command-line arguments in the format:&#10;  &lt;div&gt;&#10;   &lt;br&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;parameter1 value1 parameter2 value2 ...&lt;/code&gt;&lt;/pre&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;br&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   and outputs them in the standard output in the format:&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;br&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;parameter1=value1&#10;parameter2=value2&#10;...&lt;/code&gt;&lt;/pre&gt;&#10;   &lt;br&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   It is guaranteed, that each parameter is followed by a value.&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   &lt;br&gt;&#10;  &lt;/div&gt;&#10;  &lt;div&gt;&#10;   Please, do not rename the provided class &#10;   &lt;code class=&quot;java&quot;&gt;Problem&lt;/code&gt;.&#10;  &lt;/div&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;config-path /something/there config-format json&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;config-path=/something/there&lt;br&gt;config-format=json&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3566&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/3336" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="3336" />
                      <option name="index" value="22" />
                      <option name="name" value="Parameters and their values" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Problem {&#10;&#10;    public static void main(String args[]) {&#10;&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" />
                    </CodeTask>
                    <CodeTask>
                      <option name="customPresentableName" />
                      <option name="descriptionFormat" value="HTML" />
                      <option name="descriptionText" value="&lt;b&gt;Calculator - 2&lt;/b&gt; &lt;a class=&quot;right&quot; href=&quot;https://hyperskill.org/learn/step/3335&quot;&gt;Open on Hyperskill&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;html&gt;&#10; &lt;head&gt;&lt;/head&gt;&#10; &lt;body&gt;&#10;  &lt;p&gt;Write a program that takes an operator (&quot;MAX&quot;, &quot;MIN&quot;, &quot;SUM&quot;) and a sequence of numbers as the command-line arguments and then outputs the result of the operator in the standard output.&lt;/p&gt; &#10;  &lt;p&gt;The description of the operators:&lt;/p&gt; &#10;  &lt;ul&gt; &#10;   &lt;li&gt;&quot;MAX&quot; finds the max value of a sequence of numbers;&lt;/li&gt; &#10;   &lt;li&gt;&quot;MIN&quot; find the min value of a sequence of numbers&lt;/li&gt; &#10;   &lt;li&gt;&quot;SUM&quot; calculates the sum of a sequence of numbers.&lt;/li&gt; &#10;  &lt;/ul&gt; &#10;  &lt;p&gt;It is guaranteed that a correct operator&amp;nbsp;and at least one number will be passed to the program.&lt;/p&gt; &#10;  &lt;p&gt;Please, do not rename the provided class &lt;code&gt;Problem&lt;/code&gt;.&lt;/p&gt;&#10; &lt;/body&gt;&#10;&lt;/html&gt;&lt;br&gt;&lt;b&gt;Sample Input:&lt;/b&gt;&lt;br&gt;MAX 7 3 4 1 8 11 3 2&lt;br&gt;&lt;br&gt;&lt;b&gt;Sample Output:&lt;/b&gt;&lt;br&gt;11&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Memory limit: 256 Mb&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;gray&quot;&gt;Time limit: 5s&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br/&gt;&lt;a href=&quot;https://hyperskill.org/learn/step/3566&quot;&gt;Show topic summary&lt;/a&gt;" />
                      <option name="feedbackLink">
                        <FeedbackLink>
                          <option name="link" value="https://hyperskill.org/learn/step/3335" />
                          <option name="type" value="CUSTOM" />
                        </FeedbackLink>
                      </option>
                      <option name="id" value="3335" />
                      <option name="index" value="23" />
                      <option name="name" value="Calculator - 2" />
                      <option name="record" value="-1" />
                      <option name="status" value="Solved" />
                      <option name="files">
                        <map>
                          <entry key="src/Main.java">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list />
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="name" value="src/Main.java" />
                                <option name="text" value="class Problem {&#10;&#10;    public static void main(String args[]) {&#10;&#10;        for (int i = 0; i &lt; args.length; i++) {&#10;            if (args[i].equals(&quot;test&quot;)) {&#10;                System.out.println(i);&#10;                break;&#10;            }&#10;        }&#10;    }&#10;}" />
                                <option name="trackChanges" value="true" />
                                <option name="visible" value="true" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                      <option name="updateDate" />
                    </CodeTask>
                  </list>
                </option>
              </Lesson>
            </list>
          </option>
        </HyperskillCourse>
      </option>
    </StudyTaskManager>
  </component>
</project>