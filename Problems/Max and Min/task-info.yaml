type: code
files:
- name: src/Main.java
  visible: true
  text: |-
    import java.util.Scanner;

    class Finder {

        private FindingStrategy strategy;

        public Finder(FindingStrategy strategy) {
            // write your code here
        }

        /**
         * It performs the search algorithm according to the given strategy
         */
        public int find(int[] numbers) {
            // write your code here
        }
    }

    interface FindingStrategy {

        /**
         * Returns one of two values
         */
        int takeOne(int elem1, int elem2);

        /**
         * Returns the default value of a concrete implementation
         */
        int getDefaultValue();
    }

    class MaxFindingStrategy implements FindingStrategy {

        public int takeOne(int elem1, int elem2) {
            // write your code here
        }

        public int getDefaultValue() {
            // write your code here
        }
    }

    class MinFindingStrategy implements FindingStrategy {

        public int takeOne(int elem1, int elem2) {
            // write your code here
        }

        public int getDefaultValue() {
            // write your code here
        }
    }

    /* Do not change code below */
    public class Main {

        public static void main(String args[]) {

            final Scanner scanner = new Scanner(System.in);

            final String[] elements = scanner.nextLine().split("\\s+");
            int[] numbers = null;

            if (!elements[0].equals("EMPTY")) {
                numbers = new int[elements.length];
                for (int i = 0; i < elements.length; i++) {
                    numbers[i] = Integer.parseInt(elements[i]);
                }
            } else {
                numbers = new int[0];
            }

            final String type = scanner.nextLine();

            Finder finder = null;

            switch (type) {
                case "MIN":
                    finder = new Finder(new MinFindingStrategy());
                    break;
                case "MAX":
                    finder = new Finder(new MaxFindingStrategy());
                    break;
                default:
                    break;
            }

            if (finder == null) {
                throw new RuntimeException(
                        "Unknown strategy type passed. Please, write to the author of the problem.");
            }

            System.out.println(finder.find(numbers));
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/3331
status: Solved
record: -1
